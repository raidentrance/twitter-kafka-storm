apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'spring-boot'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

jar {
    baseName = 'twitter-kafka-storm'
    version =  '1'
}

version = '1'
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    mavenCentral()
    maven { url "https://clojars.org/repo" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-websocket")
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile ('org.twitter4j:twitter4j-stream:4.0.3'){
        exclude group: 'org.slf4j'
    }
    compile('org.apache.storm:storm-core:0.9.2-incubating'){
        exclude group: 'org.slf4j'
    }
    compile("net.wurstmeister.storm:storm-kafka-0.8-plus:0.4.0"){
        exclude group: 'org.slf4j'
    }
    compile('commons-collections:commons-collections:3.2.1'){
        exclude group: 'org.slf4j'
    }
    compile('org.springframework:spring-messaging')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

sourceSets {
    src {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDir 'src/main/resources'
                include '*.properties'
                output.resourcesDir = 'build/resources/main'
            }
        }
    }
}
mainClassName = 'twitter.kafka.storm.demo.main.Application'

task producerJar(type: Jar) {
    manifest {
        attributes  'Implementation-Title': 'Kafka tweets - producer',
                'Main-Class': 'twitter.kafka.storm.demo.stream.TwitterStreamProducer'
    }
    baseName = "StreamProducer"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//task runProducer(dependsOn:producerJar) {
  //  javaexec { main="-jar"; args file("build/libs/StreamProducer-1.jar") }
//}

task consumerJar(type: Jar) {
    manifest {
        attributes  'Implementation-Title': 'Kafka tweets - consumer',
                'Main-Class': 'twitter.kafka.storm.demo.stream.TwitterStreamConsumer'
    }
    baseName = "StreamConsumer"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//task runConsumer(dependsOn:consumerJar) << {
//    javaexec { main="-jar"; args file("build/libs/StreamConsumer-1.jar") }
//}